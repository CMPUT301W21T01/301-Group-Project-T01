package com.example.experimentify;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.widget.ArrayAdapter;

import com.google.firebase.firestore.CollectionReference;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.FieldValue;
import com.google.firebase.firestore.FirebaseFirestore;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class chatController {

    private ArrayList<chatQuestion> questions;
    private ArrayAdapter<chatQuestion> listAdapter;

    public chatController(Context context) {
        questions = new ArrayList<chatQuestion>();
        listAdapter = new chatQuestionAdaptor(context, questions);
    }
    /**
     * THIS CONSTRUCTOR WITH EMPTY PARAMETERS IS FOR TESTING PURPOSES ONLY, DON'T USE IT IN PRODUCTION (CANT MOCK CONTEXT CURRENTLY) IN ExperimentControllerTests
     */
    public chatController(){
        questions = new ArrayList<chatQuestion>();
    }

    public ArrayAdapter<chatQuestion> getAdapter() {
        return listAdapter;
    }

    public int getSize() {
        return questions.size();
    }

    public ArrayList<chatQuestion> getExperiments() {
        return questions;
    }

    /**
     * This method adds an experiment to the database.
     * @param newQuestion experiment to bed added
     * @param db the database the experiment will be saved to
     */
    public void addQuestionToDB(chatQuestion newQuestion, FirebaseFirestore db, String ownerID){
        Map<String, Object> enterData = new HashMap<>();

        List<String> searchable = new ArrayList<String>();
        //https://stackoverflow.com/a/36456911 add citation for below
        searchable.addAll(Arrays.asList(newQuestion.getDescription().toLowerCase().split("\\W+")));

        DocumentReference newRef = db.collection("Experiments").document();

        CollectionReference experiments = db.collection("Experiment");
        enterData.put("description", newQuestion.getDescription());
        enterData.put("ownerID", ownerID);
        enterData.put("editable", true);
        enterData.put("date", newQuestion.getDate());
        newRef.set(enterData);

        String experimentID = newRef.getId().toString();

        newQuestion.setUID(experimentID);  // every experiment should always have a uid which is the uid generated by firestore

        DocumentReference addID = db.collection("Experiments").document(experimentID);

        addID.update("uid", experimentID);
        addID.update("searchable", FieldValue.arrayUnion(experimentID));


        // user must also reference this newly added experiment
        addOwnedExperimentToUser(experimentID, db, ownerID);


    }
    /**
     * sets the experiments variablee
     */
    public void setQuestion(ArrayList<chatQuestion>set_experiments){
        questions = set_experiments;
    }

    /**
     * This method brings the user to the trial screen for the experiment they clicked on.
     * @param exp experiment to be viewed
     */
    public void viewQuestion(Activity activity, Experiment exp) {
        Intent intent = new Intent(activity, ExperimentActivity.class);
        intent.putExtra("clickedExp", exp);
        activity.startActivity(intent);
    }
    /**
     * This method returns an experiment based on its position in the ListView.
     * @param pos position of experiment in ListView
     * @return experiment that was clicked on
     */
    public chatQuestion getClickedQuestion(int pos) {
        return questions.get(pos);
    }








}
